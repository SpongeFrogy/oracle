version: '3.8'

services:
  oracle:
    build:
      context: ./oracle
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=oracle_db
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - oracle-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - oracle-network
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: secret
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  inferno:
    build:
      context: ./inferno
      dockerfile: Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_URL=amqp://admin:secret@rabbitmq
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=secret
      - RABBITMQ_QUEUE=signal_queue
      - API_BASE_URL=http://oracle:8000
      - TEST_NET=false
      - LOOK_BACK_WINDOWS=["5", "10"]
      - TARGET_VOLATILITY=0.25
      - MAX_ALLOCATION=1.0
      - VOLATILITY_WINDOW=90
      - TRADING_DAYS_PER_YEAR=252
      - RISK_FREE_RATE=0.0
      - MODELS_DIR=src/models
      - MODEL_FILE=combo_clf_prod.joblib
    networks:
      - oracle-network
    depends_on:
      rabbitmq:
        condition: service_healthy
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - ORACLE_URL=http://backend:8000
    ports:
      - "8501:8501"
    networks:
      - oracle-network
    depends_on:
      oracle:
        condition: service_started

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=oracle_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d oracle_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - oracle-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:

networks:
  oracle-network:
    driver: bridge